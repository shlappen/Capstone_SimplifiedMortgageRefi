@model SimplifiedMortgageRefi.ViewModels.IndexCustomerViewModel
@using System.Linq

@{
    Layout = "_CustomerDashboard";
    ViewData["Title"] = "Index";
}

@*<body>*@
<!-- Topbar -->
<!----////////////////////// -->
<!-- End of Topbar -->
<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h2 class="h3 mb-0 text-gray-800">Dashboard</h2>
        @*<a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i class="fas fa-download fa-sm text-white-50"></i> Generate Report</a>*@
    </div>

    <partial name="MyRatiosPartial" />

    <!-- Content Row -->

    <div class="row">
        <div class="col-xl-6 col-lg-6">
            <!-- Bar Chart -->
            <div class="card shadow mb-4">

                <div class="card-header py-3">
                    <h6 class="m-0 d-inline-flex float-left font-weight-bold text-primary">My Ratios</h6>

                    <a class="d-inline-flex float-right text-primary" asp-action="CreateLiabilities" asp-route-id="@Model.Application.Id">Edit My Debts</a>
                </div>
                <div class="card-body">

                    <div class="row mb-2 no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Current Loan-To-Value</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800" id="currentLTV"></div>
                                </div>
                                <div class="col">
                                    <div class="progress progress-sm mr-2">
                                        <div class="progress-bar bg-primary" role="progressbar" style="width: 0%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" id="currentLTVBar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col ml-2 mr-2 float-right">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Current Lendable Equity</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800" id="lendableEquity"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col mr-2 float-right">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Maximum Loan Amount (80% of Value)</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800" id="maxLoanAmount"></div>
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Current Debt-To-Income</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800" id="currentDTI"></div>
                                </div>
                                <div class="col">
                                    <div class="progress progress-sm mr-2">
                                        <div class="progress-bar bg-primary" role="progressbar" style="width: 0%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" id="currentDTIBar"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col ml-2 mr-2 float-right">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Current Monthly Debt Total</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800" id="currentDebtTotal"></div>
                                </div>
                            </div>
                        </div>

                        <div class="col mr-2 float-right">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">Debt Ceiling (43% of Income)</div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800" id="currentDebtCeiling"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-xl-5 col-lg-5">
            <!-- Nice Bar Chart -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Monthly Savings Comparison</h6>
                </div>
                <div class="card-body">
                    <div class="chart-bar">
                        <canvas id="myChart" class="col-md-12"></canvas>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <!-- Content Row -->
    <div class="row">
        <!-- Pie Chart -->
        <div class="col-xl-4 col-lg-4">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Current Mortgage Remaining Costs: </h6>
                    @*<div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>*@
                    <div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#piechart" role="button" data-toggle="collapse" aria-expanded="true">
                            <i class="fas fa-angle-double-down text-primary"></i>
                        </a>

                    </div>
                </div>
                <!-- Card Body -->
                <div class="collapse" id="piechart">
                    <div class="card-body">
                        <div class="chart-pie pt-4 pb-2">
                            <canvas id="labelChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-lg-4">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-warning">Refi Option 1 Costs: </h6>
                    @*<div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>*@
                    <div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#piechart" role="button" data-toggle="collapse" aria-expanded="true">
                            <i class="fas fa-angle-double-down text-warning show" id="arrow"></i>
                        </a>
                        <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                            <div class="dropdown-header">Dropdown Header:</div>
                            <a class="dropdown-item" href="#">Action</a>
                            <a class="dropdown-item" href="#">Another action</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="#">Something else here</a>
                        </div>
                    </div>
                </div>
                <!-- Card Body -->
                <div class="collapse" id="piechart">
                    <div class="card-body">
                        <div class="chart-pie pt-4 pb-2">
                            <canvas id="labelChart1"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4 col-lg-4">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-success">Refi Option 2 Costs: </h6>
                    @*<div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                        </a>*@
                    <div class="dropdown no-arrow">
                        <a class="dropdown-toggle" href="#piechart" role="button" id="dropdownMenuLink" data-toggle="collapse" aria-haspopup="true" aria-expanded="true">
                            @*<i class="fas fa-angle-double-up text-success"></i>*@
                            <i class="fas fa-angle-double-down text-success"></i>
                        </a>
                    </div>
                </div>
                <!-- Card Body -->
                <div class="collapse" id="piechart">
                    <div class="card-body">
                        <div class="chart-pie pt-4 pb-2">
                            <canvas id="labelChart2"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Current Mortgage Details -->
        <div class="col-xl-4 col-lg-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Current Mortgage Details</h6>
                </div>
                <div class="p-3">
                    <form class="user">
                        @*<div class="row">
                                <div class="col-md-4">
                                    <div class="form-group row">
                                        <label for="example" class="col-form-label col-sm-5 text-gray-900">Balance</label>
                                        <div class="input-group col-sm-7">
                                            <div class="input-group-prepend bg-primary border-primary">
                                                <span class="input-group-text bg-transparent text-white">$</span>
                                            </div>
                                            <input type="text" class="form-control text-gray-900" aria-label="Amount (to the nearest dollar)">
                                            <div class="input-group-append bg-primary border-primary">
                                                <span class="input-group-text bg-transparent text-white">.00</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <label for="example" class="col-form-label text-gray-900">Rate</label>
                                        <div class="input-group col-sm-5">
                                            <div class="input-group-prepend bg-primary border-primary">
                                                <span class="input-group-text bg-transparent text-white">%</span>
                                            </div>
                                            <input type="text" class="form-control text-gray-900" aria-label="Amount (to the nearest dollar)" placeholder="0.00">
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                        @*<form class="form-sample">
                            <p class="card-description"> Personal info </p>*@
                        @*<div class="row">*@


                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Total Left</label>
                                <div class="col-sm-7">
                                    <span class="output" id="totalremaining"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Principal Left</label>
                                <div class="col-sm-7">
                                    <span class="output" id="currentbalance"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Interest Left</label>
                                <div class="col-sm-7">
                                    <span class="output" id="remaininginterest"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Monthly Payment (Principal & Interest)</label>
                                <div class="col-sm-7">
                                    <span class="output" id="monthlypayment"></span>
                                </div>
                            </div>
                        </div>

                        <hr />


                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Rate</label>
                                <div class="col-sm-7" id="rate">
                                    @Html.DisplayFor(Model => Model.Property.Rate)%
                                </div>
                            </div>
                        </div>
                        @*</div>*@
                        @*<div class="row">*@
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Term (years)</label>
                                <div class="col-sm-7" id="term">

                                    @Html.DisplayFor(Model => Model.Property.Term)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Original Balance</label>
                                <div class="col-sm-7" id="amount">
                                    $@Html.DisplayFor(Model => Model.Property.OriginalMortgageBalance)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Start Date</label>
                                <div class="col-sm-7" id="startdate">
                                    @Html.DisplayFor(Model => Model.Property.OriginationDate)
                                </div>
                            </div>
                        </div>
                        @*</div>*@
                        @*<div class="row">*@
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Taxes (monthly)</label>
                                <div class="col-sm-7">
                                    $@Html.DisplayFor(Model => Model.Property.MonthlyPropertyTax)
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group row">
                                <label class="col-sm-5 col-form-label">Ins (monthly)</label>
                                <div class="col-sm-7">
                                    $@Html.DisplayFor(Model => Model.Property.MonthlyHOIPremium)
                                </div>
                            </div>
                        </div>
                        <div class="form-group row p-3">
                            <input type="submit" onclick="editCurrentMortgage" id="editCurrentMortgage" value="Edit" class="btn btn-primary btn-block" />
                        </div>
                    </form>
                </div>
            </div>
        </div>

            <partial name="LoanProfiles" />


        <partial name="LoanProfiles2" />
    </div>



    <div class="col-lg-6 mb-4">







    </div>


</div>


@{
    int monthsPaid = 12 * Math.Abs((DateTime.Now.Year - Model.Property.OriginationDate.Year)) + Math.Abs(DateTime.Now.Month - Model.Property.OriginationDate.Month);
    int monthsLeft = (Model.Property.Term * 12) - monthsPaid;
    int totalPayments = Model.Property.Term * 12;
}
<script src="~/theme/lib/jquery/jquery.min.js" type="text/javascript"></script>
<script src="~/theme/vendor/chart.js/Chart.min.js"></script>
<script src="~/theme/js/demo/chartjs-datalabels.js"></script>
<script src="~/js/site.js"></script>
<script async defer type="text/javascript">


    $("#editCurrentMortgage").click(function () {
    $.get('@Url.Action("EditCurrentMortgage","Customers")', {}, function (response) {
        $("#Display").html(response);
    });
});




    //<-- Current Mortgage Calc -->//
    //calculate monthly payment based on original balance, term, and rate:
    var principal = @Model.Property.OriginalMortgageBalance;
    var monthlyInterestRate = @Model.Property.Rate / 100 / 12;
    var x = Math.pow(1 + monthlyInterestRate, @totalPayments); // Math.pow() computes powers
    //get Monthly Payment:
    var monthlyPayment = (principal * x * monthlyInterestRate) / (x - 1);


    if (isFinite(monthlyPayment)) {
            monthlypayment.innerHTML = "$" + addCommas(monthlyPayment.toFixed(2));
            @*totalpayment.innerHTML = "$" + addCommas((monthly * @totalPayments).toFixed(2));
            totalinterest.innerHTML = "$" + addCommas(((monthly * @totalPayments) - principal).toFixed(2));*@
    };

    //function to calc current balance based on payment, interest rate, number of payments remaining:
    function calculate_balance(PMT, IR, NP) {
        var PV = PMT * (1 - Math.pow(1 + IR, -NP)) / IR
        return round_decimals(PV, 2)
    }

    function round_decimals(original_number, decimals) {
        var result1 = original_number * Math.pow(10, decimals)
        var result2 = Math.round(result1)
        var result3 = result2 / Math.pow(10, decimals)
        return (result3)
    }

    var loan_balance = calculate_balance(monthlyPayment, monthlyInterestRate, @monthsLeft);


    //alert("Monthly payment:\t$" + monthly + "\n" +
    //    "Annual interest rate:\t" + interest_rate * 100 + "%\n" +
    //    "Term remaining:\t" + term_remaining + " months\n\n" +
    //    "Remaining balance:\t$" + loan_balance)

    var interestTotal = (monthlyPayment * @totalPayments) - principal;
    var remaining_interest = (interestTotal - ((@monthsPaid * monthlyPayment) - (principal - loan_balance)));
    var totalLeft = (remaining_interest + loan_balance);

    //display in HTML:
    currentbalance.innerHTML = "$" + addCommas(loan_balance);
    totalremaining.innerHTML = "$" + addCommas(totalLeft.toFixed(2));
    remaininginterest.innerHTML = "$" + addCommas(remaining_interest.toFixed(2));

    //create 1st pie Chart
    var ctxP = document.getElementById("labelChart").getContext('2d');
    var myPieChart = new Chart(ctxP, {
        plugins: [ChartDataLabels],
        type: 'pie',
        data: {
            labels: ["Principal", "Interest"],
            datasets: [{
                data: [loan_balance, remaining_interest],
                backgroundColor: ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1"],
                hoverBackgroundColor: ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5"]
            }]
        },
        options: {
            responsive: true,
            legend: {
                position: 'right',
                labels: {
                    padding: 20,
                    boxWidth: 10
                }
            },
            plugins: {
                datalabels: {
                    formatter: (value, ctx) => {
                        let sum = 0;
                        let dataArr = ctx.chart.data.datasets[0].data;
                        dataArr.map(data => {
                            sum += data;
                        });
                        let percentage = "$" + addCommas(value.toFixed(2));
                        return percentage;
                    },
                    color: 'white',
                    labels: {
                        title: {
                            font: {
                                size: '16'
                            }
                        }
                    }
                }
            }
        }
    });



    if (@Model.LoanProfiles.First().LoanAmount !== 0) {

        var principal = @Model.LoanProfiles.First().LoanAmount;
        var interest = @Model.LoanProfiles.First().Rate / 100 / 12;
        var payments = @Model.LoanProfiles.First().Term * 12;

        // Now compute the monthly payment figure.
        var x = Math.pow(1 + interest, payments); // Math.pow() computes powers

        var monthly = (principal * x * interest) / (x - 1);
        var totalInterest = (monthly * payments) - principal;
        if (isFinite(monthly)) {
            totalpayment1.innerHTML = "$" + addCommas(((monthly * payments) + @Model.LoanProfiles.First().ClosingCost).toFixed(2));
            totalinterest1.innerHTML = "$" + addCommas(((monthly * payments) - principal).toFixed(2));
            monthlypayment1.innerHTML = "$" + addCommas(monthly.toFixed(2));
        };



        var ctxP = document.getElementById("labelChart1").getContext('2d');
        var myPieChart = new Chart(ctxP, {
            plugins: [ChartDataLabels],
            type: 'pie',
            data: {
                labels: ["Principal", "Interest"],
                datasets: [{
                    data: [principal, totalInterest.toFixed(2)],
                    backgroundColor: ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1"],
                    hoverBackgroundColor: ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5"]
                }]
            },
            options: {
                responsive: true,
                legend: {
                    position: 'right',
                    labels: {
                        padding: 20,
                        boxWidth: 10
                    }
                },
                plugins: {
                    datalabels: {
                        formatter: (value, ctx) => {
                            let sum = 0;
                            let dataArr = ctx.chart.data.datasets[0].data;
                            dataArr.map(data => {
                                sum += data;
                            });
                            let percentage = "$" + addCommas(value);
                            return percentage;
                        },
                        color: 'white',
                        labels: {
                            title: {
                                font: {
                                    size: '16'
                                }
                            }
                        }
                    }
                }
            }
        });

        var monthly2;
        if (@Model.LoanProfiles.First().Id != @Model.LoanProfiles.Last().Id) {

        var principal = @Model.LoanProfiles.Last().LoanAmount;
        var interest = @Model.LoanProfiles.Last().Rate / 100 / 12;
        var payments = @Model.LoanProfiles.Last().Term * 12;
        var interesttotal;
        var totaltaxes = @Model.Property.MonthlyPropertyTax * payments;
        var totalinsurance = @Model.Property.MonthlyHOIPremium * payments;

        // Now compute the monthly payment figure.
        var x = Math.pow(1 + interest, payments); // Math.pow() computes powers
        monthly2 = (principal * x * interest) / (x - 1);
        if (isFinite(monthly)) {
            totalpayment2.innerHTML = "$" + addCommas(((monthly2 * payments) + @Model.LoanProfiles.Last().ClosingCost).toFixed(2));
            totalinterest2.innerHTML = "$" + addCommas(((monthly2 * payments) - principal).toFixed(2));
            interesttotal = parseFloat(((monthly2 * payments) - principal).toFixed(2));
            monthlypayment2.innerHTML = "$" + addCommas(monthly2.toFixed(2));
        };



        var ctxP = document.getElementById("labelChart2").getContext('2d');
        var myPieChart = new Chart(ctxP, {
            plugins: [ChartDataLabels],
            type: 'pie',
            data: {
                labels: ["Principal", "Interest"],
                datasets: [{
                    data: [principal, interesttotal],
                    backgroundColor: ["#F7464A", "#46BFBD", "#FDB45C", "#949FB1"],
                    hoverBackgroundColor: ["#FF5A5E", "#5AD3D1", "#FFC870", "#A8B3C5"]
                }]
            },
            options: {
                responsive: true,
                legend: {
                    position: 'right',
                    labels: {
                        padding: 20,
                        boxWidth: 10
                    }
                },
                plugins: {
                    datalabels: {
                        formatter: (value, ctx) => {
                            let sum = 0;
                            let dataArr = ctx.chart.data.datasets[0].data;
                            dataArr.map(data => {
                                sum += data;
                            });
                            let percentage = "$" + addCommas(value);
                            return percentage;
                        },
                        color: 'white',
                        labels: {
                            title: {
                                font: {
                                    size: '16'
                                }
                            }
                        }
                    }
                }
            }
        });
        }

        var option2 = "";
        if (@Model.LoanProfiles.First().Id != @Model.LoanProfiles.Last().Id) {
            option2 = "Option 2: " + @Model.LoanProfiles.Last().Term + " year at " + @Model.LoanProfiles.Last().Rate + "%";
        };
        var myChart;
        var opt1Savings = monthlyPayment - monthly;
        var opt2Savings = monthlyPayment - monthly2;
        console.log(opt1Savings);
        function calculateSavings() {
            var savings = document.getElementsByClassName("savings");
            console.log(savings);
            var i;
            for (i = 0; i < savings.length; i++) {
                if (savings[i].checked) {
                    console.log(savings[i].checked);
                    console.log(savings[i].value);
                    opt1Savings = opt1Savings + parseInt(savings[i].value);
                    console.log(opt1Savings)

                }
            }
        }

        function updateChart() {
            chart.update();
        }

        var ctx = document.getElementById("myChart").getContext('2d');
        myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Option 1: " + @Model.LoanProfiles.FirstOrDefault().Term + " year at " + @Model.LoanProfiles.FirstOrDefault().Rate + "%", option2],
                datasets: [{
                    label: 'Monthly Savings',
                    data: [opt1Savings, opt2Savings.toFixed(2)],
                    backgroundColor: [
                        //'rgba(255, 99, 132, 0.2)',
                        //'rgba(54, 162, 235, 0.2)',
                        //'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 250, 150, 0.2)'
                        //'rgba(153, 102, 255, 0.2)',
                    ],
                    borderColor: [
                        //'rgba(255,99,132,1)',
                        //'rgba(54, 162, 235, 1)',
                        //'rgba(255, 159, 64, 1)',

                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 250, 150, 1)'
                        //'rgba(153, 102, 255, 1)',
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    }

    var monthlyIncomeStream = @Model.Customer.MonthlyIncome;
    if (monthlyIncomeStream > 0) {
        monthlyIncome.innerHTML = "$" + addCommas(@Model.Customer.MonthlyIncome);
        annualIncome.innerHTML = "$" + addCommas(@Model.Customer.MonthlyIncome * 12);
    };


    var value = @Model.Property.AssessedValue;
    if(value > 0 ) {
    estimatedValue.innerHTML = "$" + addCommas(value);
    var currentLTVpercent = loan_balance / value;
    currentLTVpercent = currentLTVpercent * 100;
    currentLTVpercent = currentLTVpercent.toFixed(2);
    currentLTV.innerHTML = currentLTVpercent + "%";
        document.getElementById("currentLTVBar").style.width = currentLTVpercent + "%";
    var maxLoan = value * .8;
    var currentEquity = (maxLoan - loan_balance).toFixed(2);
    lendableEquity.innerHTML = "$" + addCommas(currentEquity);
    maxLoanAmount.innerHTML = "$" + addCommas((maxLoan.toFixed(0)));
    };
    currentDTI.innerHTML = @Model.Property.DebtToIncome + "%";
        document.getElementById("currentDTIBar").style.width = @Model.Property.DebtToIncome;

    currentDebtTotal.innerHTML = "$" + addCommas(@Model.Property.MonthlyExpenses)
    currentDebtCeiling.innerHTML = "$" + addCommas((@Model.Customer.MonthlyIncome * .43).toFixed(2));
</script>


